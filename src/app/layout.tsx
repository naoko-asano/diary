import type { Metadata } from "next";
import {
  Center,
  ColorSchemeScript,
  Container,
  mantineHtmlProps,
  MantineProvider,
  Title,
} from "@mantine/core";
import "@mantine/core/styles.css";
import { Notifications } from "@mantine/notifications";
import "@mantine/notifications/styles.css";
import localFont from "next/font/local";

import { theme } from "@/lib/theme";

import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" {...mantineHtmlProps}>
      <head>
        <ColorSchemeScript />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <MantineProvider theme={theme} defaultColorScheme="dark">
          <>
            <Notifications position="top-left" />
            <Container
              fluid
              mx={{ base: "md", xs: "md", sm: "lg", lg: "xl" }}
              my={{ base: "sm", xs: "sm", sm: "md", lg: "lg" }}
            >
              <Center mb={{ base: "sm", xs: "sm", sm: "md", lg: "lg" }}>
                <Title order={1} size={"xl"}>
                  Diary
                </Title>
              </Center>
              {children}
            </Container>
          </>
        </MantineProvider>
      </body>
    </html>
  );
}
